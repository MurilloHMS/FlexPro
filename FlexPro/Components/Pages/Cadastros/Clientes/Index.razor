@page "/cadastros/clientes"
@inject ApplicationDbContext _context;
@inject IDialogService DialogService;

@attribute [Authorize]

<PageTitle>Clientes</PageTitle>

<MudText Typo="Typo.h2">Clientes</MudText>
<br><br><br>
<MudDataGrid Items="@clientesFiltrados" T="Cliente" Hover="true" Bordered="true" Striped="true" Dense="true" SortMode="SortMode.Multiple">
    <ToolBarContent>
        <MudButton @onclick="@(() => OpenDialogAsync())" Variant="Variant.Filled" Size="Size.Small" Color="Color.Primary">Novo</MudButton>
        <MudSpacer/>
        <MudTextField @bind-Value="_searchString" Placeholder="Buscar cliente" Adornment="Adornment.Start" Immediate="true"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"/>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x.CodigoSistema" Title="CÃ³digo Sistema" Sortable="true" Filterable="true"/>
        <PropertyColumn Property="x => x.Nome" Title="Nome" Sortable="true" Filterable="true"/>
        <PropertyColumn Property="x => x.Email" Title="E-Mail" Sortable="true" Filterable="true"/>
    </Columns>
    <PagerContent>
        <MudDataGridPager T="Cliente"/>
    </PagerContent>
</MudDataGrid>


@code {
    private IEnumerable<Cliente> _clientes = new List<Cliente>();
    private string _searchString = "";

    private IEnumerable<Cliente> clientesFiltrados => string.IsNullOrWhiteSpace(_searchString)
        ? _clientes
        : _clientes.Where(x => x.Nome.Contains(_searchString, StringComparison.OrdinalIgnoreCase));

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _clientes = await _context.Cliente.ToListAsync();
        }
        catch (Exception e)
        {
            _clientes = default;
        }
    }

    private async Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, CloseButton = true, MaxWidth = MaxWidth.Medium, FullWidth = true };
        var dialog = await DialogService.ShowAsync<CadastrarCliente>("Cadastro de Clientes", options);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            _clientes = await _context.Cliente.ToListAsync();
        }
    }

}