@page "/BoaSolucao"

@inject IDialogService DialogService
@inject ApplicationDbContext _context

@attribute [Authorize]

<MudText Typo="Typo.h4" Align="Align.Center">Pedidos Boa Solução</MudText>

<MudSelect @bind-Value="stringValue" Label="Selecione uma receita" HelperText="Receita do produto para emissão da nota fiscal" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary">
    @foreach (var item in _receitas)
    {
        <MudSelectItem Value="@item.Nome">@item.Nome</MudSelectItem>
    }
</MudSelect>
<MudPaper Elevation="25">
    <MudToolBar>
        <MudMenu FullWidth="false" ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" Variant="Variant.Filled" Dense="true">
            <ActivatorContent>
                <MudFab StartIcon="@Icons.Material.Filled.Receipt" Color="Color.Primary" Size="Size.Small" Label="Receitas"/>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem OnClick="@(() => OpenReceiptDialogAsync())" Icon="@Icons.Material.Filled.AddCircle">Cadastrar</MudMenuItem>
                <MudMenuItem OnClick="@(() => OpenReceiptDialogAsync())" Icon="@Icons.Material.Filled.Edit">Editar</MudMenuItem>
                <MudMenuItem OnClick="@(() => OpenReceiptDialogAsync())" Icon="@Icons.Material.Filled.RemoveCircle">Remover</MudMenuItem>
            </ChildContent>
        </MudMenu>
        <MudMenu FullWidth="false" ActivationEvent="MouseEvent.MouseOver" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopLeft" Variant="Variant.Filled">
            <ActivatorContent>
                <MudFab StartIcon="@Icons.Material.Filled.ShoppingCart" Color="Color.Primary" Size="Size.Small" Label="Produtos"/>
            </ActivatorContent>
            <ChildContent>
                <MudMenuItem OnClick="@(() => OpenReceiptDialogAsync())" Icon="@Icons.Material.Filled.AddCircle">Cadastrar</MudMenuItem>
                <MudMenuItem OnClick="@(() => OpenReceiptDialogAsync())" Icon="@Icons.Material.Filled.Edit">Editar</MudMenuItem>
                <MudMenuItem OnClick="@(() => OpenReceiptDialogAsync())" Icon="@Icons.Material.Filled.RemoveCircle">Remover</MudMenuItem>
            </ChildContent>
        </MudMenu>
        <MudFab StartIcon="@Icons.Material.Filled.Update" Size="Size.Small"/>
    </MudToolBar>
</MudPaper>
<MudDataGrid Items="@_produtos" T="Produto" Hover="true" Dense="true">
    <Columns>
        <PropertyColumn Property="x => x.CodigoSistema" Title="Código do sistema" CellStyleFunc="@_cellStyleFunc"/>
        <PropertyColumn Property="x => x.Descricao" Title="Descrição" CellStyleFunc="@_cellStyleFunc"/>
        <PropertyColumn Property="x => x.QuantidadeFormula" Title="Quantidade Fórmula" Hidden="true" CellStyleFunc="@_cellStyleFunc"/>
        <PropertyColumn Property="x => x.QuantidadeProducao" Title="Quantidade Produção" CellStyleFunc="@_cellStyleFunc"/>
        <PropertyColumn Property="x => x.MateriaPrima" Title="Tipo Estoque" CellStyleFunc="@_cellStyleFunc"/>
    </Columns>
</MudDataGrid>
@code {
    private IEnumerable<Produto> _produtos = new List<Produto>();
    private IEnumerable<Receita> _receitas = new List<Receita>();
    private string stringValue { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _produtos = new List<Produto>()
        {
            new Produto
            {
                Id = 1,
                CodigoSistema = "3074",
                Descricao = "TETRAPIROFOSAFATO DE SODIO BOA SOLUÇÃO",
                QuantidadeFormula = 0.01500m,
                MateriaPrima = "Boa Solução"
            },
            new Produto
            {
                Id = 2,
                CodigoSistema = "2936",
                Descricao = "MÃO DE OBRA PRODUÇÃO",
                QuantidadeFormula = 1m,
                MateriaPrima = "Mão de Obra"
            }
        };
        _receitas = await _context.Receita.ToListAsync();
    }

    private Func<Produto, string> _cellStyleFunc => x =>
    {
        string style = "";

        if (x.MateriaPrima == "Proauto")
            style += "background-color:#FFFFFF";

        else if (x.MateriaPrima == "Boa Solução")
            style += "background-color:#ffff00";

        else if (x.MateriaPrima == "Mão de Obra")
            style += "background-color:#e8e8e8";

        return style;
    };

    private async Task OpenReceiptDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, CloseButton = true, MaxWidth = MaxWidth.Medium, FullWidth = true };
        var dialog = await DialogService.ShowAsync<CadastrarReceitas>("Cadastrar Receita", options);
        var result = await dialog.Result;

        if (!result.Canceled)
            _receitas = await _context.Receita.ToListAsync();
    }
    
}