@page "/Relatorios/Abastecimento/Individual/{Data}"
@using FlexPro.Data
@using Microsoft.AspNetCore.Authorization
@using System.Text
@using FlexPro.Services
@using Microsoft.EntityFrameworkCore
@using SQLitePCL

@inject ApplicationDbContext _context
@inject NavigationManager Navigation
@inject AbastecimentoService AbastecimentoService

@attribute [Authorize]

<MudText Typo="Typo.h6" Align="Align.Center">Métricas do relatório Setores</MudText>

<MudTextField T="string" Label="Dados para o relatório" Variant="Variant.Outlined" Text="@resultado" Lines="30"/>

@code {

    private string? resultado;

    [Parameter]
    public string Data { get; set; }

    public DateTime DataConvertida;

    protected override async Task OnParametersSetAsync()
    {
        if (string.IsNullOrEmpty(Data))
        {
            DataConvertida = DateTime.MinValue;
        }
        else if (DateTime.TryParse(Data, out var data))
        {
            DataConvertida = data;
        }
        else
        {
            DataConvertida = DateTime.MinValue;
        }

        if (DataConvertida != DateTime.MinValue)
        {
            resultado = await AbastecimentoService.CalcularAbastecimentoIndividual(DataConvertida);
        }
    }
}
