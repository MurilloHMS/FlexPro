@page "/veiculos"
@using FlexPro.Data
@using FlexPro.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@inject IDialogService DialogService
@inject ApplicationDbContext _context

@attribute [Authorize]

<MudText Typo="Typo.h2">Veiculos</MudText>
<br><br><br>
<MudButton @onclick="OpenDialogAsync" Variant="Variant.Filled" Color="Color.Primary">
    Cadastrar Novo
</MudButton>
<br>
<br>

<MudDataGrid Items="@veiculos" T="Veiculo" Hover="true" Bordered="true" Striped="true" Dense="true" SortMode="SortMode.Multiple" Filterable="true">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Lista de Veiculos</MudText>
        <MudSpacer/>
        <MudTextField Placeholder="Buscar" Adornment="Adornment.Start" Immediate="true" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x.Nome" Title="Nome" Sortable="true" Filterable="true" />
        <PropertyColumn Property="x => x.Placa" Title="Placa" Sortable="true" Filterable="true"/>
        <PropertyColumn Property="x => x.Marca" Title="Marca" Sortable="true" Filterable="true"/>
    </Columns>
</MudDataGrid>


@code {
    private IEnumerable<Veiculo> veiculos;
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            veiculos = await _context.Veiculo.ToListAsync();
        }
        catch (Exception)
        {
            veiculos = new List<Veiculo>();
        }
    }

    private Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, CloseButton = true, MaxWidth = MaxWidth.Medium, FullWidth = true};
        return DialogService.ShowAsync<Dialog>("Cadastro de Ve√≠culo", options);
    }
}
