@page "/dash/veiculos"
@using FlexPro.Data
@using System.Diagnostics
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.EntityFrameworkCore;

@inject ApplicationDbContext _context

<MudText Typo="Typo.h2" Align="Align.Center">Veiculos/Revisões</MudText>
<br><br>

<MudGrid>
    <MudItem xs="12" sm="3">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6" Align="Align.Center">Quantidade de Funcionários</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText Align="Align.Center">@totalFuncionarios</MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="3">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6" Align="Align.Center">Quantidade de Veiculos</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText Align="Align.Center">@totalVeiculos</MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="3">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6" Align="Align.Center">Quantidade de Revisões</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText Align="Align.Center">@totalRevisoes</MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="3">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6" Align="Align.Center">Quantidade de Fornecedores</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText Align="Align.Center">@totalFornecedores</MudText>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>
<br><br>
<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudChart ChartType="ChartType.Bar" Width="100%" Height="250px" />
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="5">
        <MudPaper Class="pa-4">
            <MudChart ChartType="ChartType.Pie" Width="100%" Height="250px" InputData="@DataResumoRevisoesPorFornecedores" InputLabels="@LabelsResumoRevisoesPorFornecedores" LegendPosition="Position.Right">
                
            </MudChart>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private int totalFuncionarios = default!;
    private int totalVeiculos = default!;
    private int totalRevisoes = default!;
    private int totalFornecedores = default!;

    private double[] DataResumoRevisoesPorFornecedores;
    private string[] LabelsResumoRevisoesPorFornecedores;
    
    protected override void OnInitialized()
    {
        totalFuncionarios = _context.Funcionarios.Count();
        totalVeiculos = _context.Veiculo.Count();
        totalFornecedores = _context.Entidade.Count();
        totalRevisoes = _context.Revisao.Count();
        
        var topVeiculos = _context.Veiculo
            .OrderByDescending(v => _context.Revisao.Count(r => r.VeiculoId == v.Id))
            .Take(5)
            .Select(v => new{
                v.Nome,
                v.Placa,
                RevisoesCount = _context.Revisao.Count(r => r.VeiculoId == v.Id)
            }).ToList();
            
        var resumoRevisoesPorFornecedor = _context.Entidade
            .Select(f => new RevisoesPorFornecedor
            {
                Nome = f.Nome,
                RevisoesCount = _context.Revisao.Count(r => r.LocalId == f.ID)
            }).ToList();

        DataResumoRevisoesPorFornecedores = resumoRevisoesPorFornecedor.Select(r => (double)r.RevisoesCount).ToArray();
        LabelsResumoRevisoesPorFornecedores = resumoRevisoesPorFornecedor.Select(r => r.Nome).ToArray();

        var revisoesPorFornecedor = _context.Entidade
            .Select(f => new
            {
                Nome = f.Nome,
                RevisoesCount = _context.Revisao.Count(r => r.LocalId == f.ID)
            }).ToList();

        var veiculosPorMarca = _context.Veiculo
            .GroupBy(v => v.Placa)
            .Select(g => new { Brand = g.Key, Count = g.Count() })
            .ToList();
    }
    
    private class RevisoesPorFornecedor
    {
        public string Nome { get; set; }
        public int RevisoesCount { get; set; }
    }

}